version: '3.7'

configs:

  postgres_exporter_config:
    file: ./queries.yaml

services:
  redis:
    image: redis:7-alpine
    ports:
      - 6379:6379
    volumes:
      - ~/data/lru/redis:/data
  rabbitmq:
    image: rabbitmq:alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/data/lru/rabbitmq:/var/lib/rabbitmq
  postgres:
    image: postgres:15.3-alpine3.17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200
    volumes:
      - ~/data/lru/postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres.conf:/etc/postgresql/postgresql.conf
    ports:
      - 5432:5432
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
    environment:
      - API_URL=http://localhost:3333
    command: ["npm", "run", "start"]
  gateway:
    image: lru-gateway:local
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      - PORT=3333
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAPPER_HOST=mapper
      - MAPPER_PORT=1111
      - REDIRECT_HOST=redirect
      - REDIRECT_PORT=2222
      - OTEL_ENDPOINT=agent:4317
    depends_on:
      - redis
      - mapper
      - redirect
    volumes:
      - ./gateway:/app
      - ./logs:/var/log
    command: ["go", "run", "main.go"]
    ports:
      - 3333:3333
  mapper:
    image: lru-mapper:local
    build:
      context: ./mapper
      dockerfile: Dockerfile
    environment:
      - PORT=1111
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lru_mapper
      - CACHE_HOST=redis
      - CACHE_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=map
      - REDIRECT_QUEUE=redirect
      - ANALYTIC_QUEUE=analytic
    depends_on:
      - postgres
      - redis
      - rabbitmq
    ports:
      - 1111:1111
    volumes:
      - ./mapper:/app
      - ./logs:/var/log
    command: ["go", "run", "main.go"]
  redirect:
    image: lru-redirect:local
    build:
      context: ./redirect
      dockerfile: Dockerfile
    environment:
      - PORT=2222
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=map
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lru_redirect
      - REDIRECT_QUEUE=redirect
      - ANALYTIC_QUEUE=analytic
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - 2222:2222
    volumes:
      - ./redirect:/app
      - ./logs:/var/log
    command: ["go", "run", "main.go"]
  analytic:
    image: lru-analytic:local
    build:
      context: ./analytic
      dockerfile: Dockerfile
    environment:
      - PORT=4444
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=map
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lru_analytic
      - ANALYTIC_QUEUE=analytic
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - 4444:4444
    volumes:
      - ./analytic:/app
      - ./logs:/var/log
    command: ["go", "run", "main.go"]
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    expose:
      - 9090
  grafana:
    image: grafana/grafana
    ports:
      - 3001:3000
    user: root
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor,lokiLogs
    depends_on:
      - loki
  loki:
    image: grafana/loki:main
    user: root
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki:/etc/loki
      - ./loki-config.yaml:/etc/loki/local-config.yaml
  promtail:
    image: grafana/promtail:main
    user: root
    volumes:
      - ./promtail:/etc/promtail
      - ./promtail-config.yaml:/etc/promtail/local-config.yaml
      - ./logs:/var/log
    command: -config.file=/etc/promtail/local-config.yaml
    depends_on:
      - loki
  tempo:
    image: grafana/tempo:latest
    user: root
    command:
      - "-config.file=/etc/tempo/tempo-config.yaml"                           # disables the requirement for the X-Scope-OrgID header
      - "-server.http-listen-port=3200"
    ports:
      - "3200:3200"
      - "4317:4317"
    volumes:
      - ./tempo:/tmp/tempo
      - ./tempo-config.yaml:/etc/tempo/tempo-config.yaml
    depends_on:
      - loki
      - prometheus
  agent:
    user: root
    image: grafana/agent:main
    volumes:
      - ./agent.yaml:/etc/agent-config/agent.yaml
      - ./agent:/tmp/agent
    entrypoint:
      - /bin/grafana-agent
      - -config.file=/etc/agent-config/agent.yaml
      - -metrics.wal-directory=/tmp/agent/wal
      - -enable-features=integrations-next
      - -config.expand-env
      - -config.enable-read-api
    environment:
      HOSTNAME: agent
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:4317
      POSTGRES_HOST: postgres:5432
      REDIS_HOST: redis:6379
    ports:
      - "12345:12345"
    depends_on:
      - loki
      - tempo

